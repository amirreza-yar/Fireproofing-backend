# Generated by Django 4.1.5 on 2023-03-15 19:26

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_price', models.IntegerField(default=200, validators=[django.core.validators.MinValueValidator(0)])),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=33)),
                ('description', models.TextField()),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True)),
                ('expire_date', models.DateField(default=datetime.datetime(2023, 3, 29, 19, 26, 34, 699618))),
                ('is_a_percentage', models.BooleanField(default=True)),
                ('discount_percentage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('discount_amount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('en_name', models.CharField(max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('en_meta_description', models.TextField(blank=True)),
                ('full_description', models.TextField(blank=True)),
                ('en_full_description', models.TextField(blank=True)),
                ('is_instock', models.BooleanField(default=True)),
                ('rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('image0', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='productImage/')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_purchased', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('is_recommended', models.BooleanField(default=True)),
                ('discount_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100)])),
                ('is_service', models.BooleanField(default=False)),
                ('inventory', models.IntegerField()),
                ('categories', models.ManyToManyField(blank=True, related_name='+', to='Product.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_rate', models.FloatField(default=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('commenter_name', models.CharField(max_length=200)),
                ('commenter_email', models.EmailField(max_length=254)),
                ('comment', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='+', to='Product.productcomment'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=1000)),
                ('postal_code', models.IntegerField(blank=True, default=132)),
                ('additional_note', models.CharField(blank=True, max_length=1000)),
                ('items', models.JSONField()),
                ('is_payed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PN', 'در انتظار تایید'), ('PR', 'در حال آماده سازی'), ('SN', 'در حال ارسال'), ('RC', 'تحویل داده شده'), ('CD', 'لغو شده')], default='PN', max_length=2)),
                ('items_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('shipping_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('finished_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_code', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('ordered_date', models.DateTimeField(default=datetime.datetime(2023, 3, 15, 19, 26, 34, 699382))),
                ('phone_number', models.IntegerField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='discount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Product.discountcode'),
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(related_name='+', to='Product.cartitem'),
        ),
    ]
